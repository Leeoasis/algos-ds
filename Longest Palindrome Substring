var longestPalindrome = function(s) {
    if (s.length <= 1) {
        return s; // Trivial case, single characters or empty string are palindromes
    }
    
    const n = s.length;
    const dp = new Array(n);
    for (let i = 0; i < n; i++) {
        dp[i] = new Array(n).fill(false);
    }
    
    let start = 0; // Starting index of the longest palindromic substring
    let maxLength = 1; // Length of the longest palindromic substring
    
    // All single characters are palindromes
    for (let i = 0; i < n; i++) {
        dp[i][i] = true;
    }
    
    // Check for palindromic substrings of length 2
    for (let i = 0; i < n - 1; i++) {
        if (s[i] === s[i + 1]) {
            dp[i][i + 1] = true;
            start = i;
            maxLength = 2;
        }
    }
    
    // Check for palindromic substrings of length 3 or more
    for (let len = 3; len <= n; len++) {
        for (let i = 0; i <= n - len; i++) {
            const j = i + len - 1; // Ending index
            if (s[i] === s[j] && dp[i + 1][j - 1]) {
                dp[i][j] = true;
                if (len > maxLength) {
                    start = i;
                    maxLength = len;
                }
            }
        }
    }
    
    // Extract the longest palindromic substring
    return s.slice(start, start + maxLength);
};

// Example usage
const s1 = "babad";
const s2 = "cbbd";
console.log(longestPalindrome(s1)); // Output: "bab" (or "aba" is also valid)
console.log(longestPalindrome(s2)); // Output: "bb"
